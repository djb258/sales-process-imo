{
  "name": "imo-creator",
  "private": true,
  "version": "2.0.0",
  "description": "Unified repository compliance and orchestration system with Factory/Mechanic architecture",
  "main": "index.js",
  "scripts": {
    "dev": "next dev --port 3000",
    "build": "next build",
    "start": "next start",
    "lint": "next lint",
    "lint:fix": "next lint --fix",
    "type-check": "tsc --noEmit",
    "format": "prettier --write \"**/*.{js,jsx,ts,tsx,json,md}\"",
    "test": "vitest",
    "test:watch": "vitest --watch",
    "storybook": "storybook dev -p 6006",
    "build-storybook": "storybook build",
    "legacy:dev": "node factory/ui/dev.js",
    "legacy:build": "node factory/ui/build.js",
    "init": "bash factory/ui/init.sh",
    "recall": "bash mechanic/recall/recall.sh",
    "env:check": "node scripts/env-check.mjs",
    "compliance:check": "node scripts/compliance-check.js",
    "compliance:fix": "python tools/repo_compliance_fixer.py",
    "audit": "python simple_garage_bay.py",
    "orchestrate": "python tools/repo_mcp_orchestrator.py",
    "vercel:dev": "vercel dev",
    "vercel:build": "next build",
    "factory:validate": "tsx scripts/factory/validate-spec.ts",
    "factory:validate-blueprint": "tsx scripts/factory/validate-blueprint.ts",
    "factory:check": "tsx scripts/factory/factory-check.ts",
    "factory:export": "tsx scripts/factory/factory-export.ts",
    "factory:diagram": "tsx scripts/factory/flow-to-mermaid.ts",
    "garage:start": "tsx scripts/garage/garage-entrypoint.ts",
    "garage:scan": "tsx scripts/garage/garage-scan.ts",
    "garage:viz": "cd garage/viz && pnpm install && pnpm dev",
    "smoke:instantly": "tsx scripts/smoke-instantly.ts",
    "garage:viz:build": "cd garage/viz && pnpm build",
    "garage:viz:start": "cd garage/viz && pnpm start",
    "spec:validate": "tsx scripts/factory/validate-spec.ts",
    "spec:visualize": "tsx scripts/factory/flow-to-mermaid.ts",
    "precommit": "npm run factory:check && npm run lint && npm run type-check",
    "ci:validate": "npm run factory:check && npm run factory:export",
    "plasmic:sync": "plasmic sync",
    "plasmic:auth": "plasmic auth",
    "plasmic:init": "plasmic init",
    "plasmic:watch": "plasmic watch",
    "bmad:bench": "bash -lc './bmad/measure.sh npm test'",
    "bmad:analyze": "./bmad/analyze.sh",
    "heir:check": "python3 scripts/heir_bmad_check.py",
    "ctb:lint": "node scripts/ctb-validate.mjs",
    "mcp:start": "node scripts/dev-tools.js start",
    "mcp:stop": "node scripts/dev-tools.js stop",
    "mcp:health": "node scripts/dev-tools.js health",
    "mcp:status": "node scripts/dev-tools.js status",
    "mcp:compliance": "node scripts/dev-tools.js compliance",
    "mcp:create": "node scripts/dev-tools.js create",
    "compliance:generate": "node scripts/generate-compliance.js",
    "test:basic": "node tests/basic-test-runner.js",
    "prod:start": "NODE_ENV=production npm run mcp:start",
    "docker:build": "docker build -t mcp-servers .",
    "docker:dev": "docker-compose up -d",
    "doctrine:validate": "node scripts/doctrine-enforcer.js validate",
    "doctrine:enforce": "node scripts/doctrine-enforcer.js enforce",
    "doctrine:llm-check": "node scripts/doctrine-enforcer.js llm-check",
    "doctrine:mcp-check": "node scripts/doctrine-enforcer.js mcp-check",
    "predeploy": "npm run doctrine:validate",
    "outreach:start": "node server/server.js",
    "outreach:dev": "NODE_ENV=development node server/server.js",
    "outreach:install": "npm install express cors pg dotenv ajv ajv-formats",
    "abacus:register": "tsx scripts/register-abacus-mcp.ts",
    "smoke": "tsx scripts/smoke.ts",
    "abacus:lint": "eslint --no-eslintrc --config .eslintrc-abacus.js \"src/**/*.ts\" --format compact"
  },
  "dependencies": {
    "@builder.io/cli": "^1.2.10",
    "@builder.io/dev-tools": "^1.11.21",
    "@builder.io/sdk": "^6.1.2",
    "@clerk/nextjs": "^6.31.4",
    "@clerk/themes": "^2.4.13",
    "@emotion/react": "^11.14.0",
    "@emotion/styled": "^11.14.1",
    "@google-cloud/bigquery": "^8.1.1",
    "@headlessui/react": "^1.7.17",
    "@heroicons/react": "^2.0.18",
    "@modelcontextprotocol/sdk": "^1.17.5",
    "@mui/material": "^7.3.2",
    "@neondatabase/serverless": "^0.10.0",
    "@paralleldrive/cuid2": "^2.2.2",
    "@planetscale/database": "^1.19.0",
    "@plasmicapp/cli": "^0.1.333",
    "@plasmicapp/host": "^1.0.206",
    "@plasmicapp/loader-nextjs": "^1.0.406",
    "@plasmicapp/react-web": "^0.2.333",
    "@radix-ui/react-dialog": "^1.0.5",
    "@radix-ui/react-dropdown-menu": "^2.0.6",
    "@radix-ui/react-select": "^2.0.0",
    "@radix-ui/react-slider": "^1.1.2",
    "@radix-ui/react-tabs": "^1.0.4",
    "@radix-ui/react-toast": "^1.1.5",
    "@radix-ui/react-tooltip": "^1.0.7",
    "@radix-ui/themes": "^3.2.1",
    "@reactflow/controls": "^11.2.0",
    "@reactflow/core": "^11.10.1",
    "@reactflow/minimap": "^11.7.0",
    "@sentry/nextjs": "^10.5.0",
    "@tailwindcss/forms": "^0.5.7",
    "@tailwindcss/typography": "^0.5.10",
    "@tanstack/react-query": "^5.8.4",
    "@tanstack/react-query-devtools": "^5.8.4",
    "@tanstack/react-table": "^8.10.7",
    "@trpc/client": "^11.5.0",
    "@trpc/next": "^11.5.0",
    "@trpc/react-query": "^11.5.0",
    "@trpc/server": "^11.5.0",
    "ajv": "^8.17.1",
    "autoprefixer": "^10.4.16",
    "class-variance-authority": "^0.7.0",
    "clsx": "^2.0.0",
    "composio-core": "^0.5.39",
    "cors": "^2.8.5",
    "date-fns": "^2.30.0",
    "dotenv": "^16.3.1",
    "drizzle-kit": "^0.31.4",
    "drizzle-orm": "^0.44.4",
    "express": "^4.18.2",
    "firebase-admin": "^12.0.0",
    "framer-motion": "^10.16.4",
    "immer": "^10.1.1",
    "js-yaml": "^4.1.0",
    "lottie-react": "^2.4.0",
    "lucide-react": "^0.294.0",
    "mermaid": "^10.6.1",
    "mysql2": "^3.14.3",
    "next": "^14.0.0",
    "next-themes": "^0.4.6",
    "pg": "^8.11.3",
    "postcss": "^8.4.32",
    "react": "^18.2.0",
    "react-dom": "^18.2.0",
    "react-dropzone": "^14.2.3",
    "react-hook-form": "^7.47.0",
    "react-spring": "^9.7.3",
    "reactflow": "^11.10.1",
    "recharts": "^2.8.0",
    "shadcn-ui": "^0.9.5",
    "tailwind-merge": "^2.0.0",
    "tailwindcss": "^3.3.6",
    "undici": "^6.19.8",
    "yaml": "^2.6.1",
    "zod": "^3.25.76",
    "zustand": "^4.5.7"
  },
  "devDependencies": {
    "@chromatic-com/storybook": "^4.1.1",
    "@figma/plugin-typings": "^1.117.0",
    "@storybook/nextjs": "^9.1.4",
    "@storybook/react": "^9.1.4",
    "@testing-library/jest-dom": "^6.1.5",
    "@testing-library/react": "^13.4.0",
    "@types/js-yaml": "^4.0.9",
    "@types/node": "^20.0.0",
    "@types/react": "^18.2.37",
    "@types/react-dom": "^18.2.15",
    "@typescript-eslint/eslint-plugin": "^6.12.0",
    "@typescript-eslint/parser": "^6.12.0",
    "@vitejs/plugin-react": "^4.1.1",
    "eslint": "^8.54.0",
    "eslint-config-next": "^14.0.0",
    "prettier": "^3.1.0",
    "prettier-plugin-tailwindcss": "^0.5.7",
    "tsx": "^4.0.0",
    "typescript": "^5.0.0",
    "vitest": "^0.34.6"
  },
  "keywords": [
    "compliance",
    "orchestration",
    "garage-mcp",
    "heir",
    "imo-creator",
    "factory",
    "mechanic"
  ],
  "author": "",
  "license": "MIT",
  "engines": {
    "node": ">=18.0.0"
  }
}