flowchart LR
    classDef done fill:#22c55e,stroke:#15803d,color:#fff;
    classDef wip fill:#f59e0b,stroke:#b45309,color:#111;
    classDef todo fill:#ef4444,stroke:#7f1d1d,color:#fff;

    subgraph INPUT["INPUT"]
        input_one_liner["one_liner<br/>What do we accept/reject?"]:::todo
        input_sources["sources<br/>Source strategy, triggers, prechecks"]:::wip
        input_one_liner --> input_sources
        input_contract["contract<br/>Input schema & idempotency"]:::todo
        input_sources --> input_contract
        input_intake_steps["intake_steps<br/>Intake steps & params"]:::todo
        input_contract --> input_intake_steps
        input_fixtures["fixtures<br/>Examples & acceptance"]:::todo
        input_intake_steps --> input_fixtures
    end

    subgraph MIDDLE["MIDDLE"]
        middle_frame["frame<br/>What value we add"]:::todo
        middle_state_machine["state_machine<br/>States & owners"]:::todo
        middle_frame --> middle_state_machine
        middle_gates["gates<br/>Validation gates & invariants (HEIR-capable)"]:::todo
        middle_state_machine --> middle_gates
        middle_transform["transform<br/>Transform / enrich (idempotent)"]:::todo
        middle_gates --> middle_transform
        middle_tests["tests<br/>Fixtures & simulator"]:::todo
        middle_transform --> middle_tests
        middle_staging["staging<br/>Stage to working store + events"]:::done
        middle_tests --> middle_staging
    end

    subgraph OUTPUT["OUTPUT"]
        output_frame["frame<br/>Who gets what (and why now)"]:::todo
        output_destinations["destinations<br/>Destinations & consumers"]:::todo
        output_frame --> output_destinations
        output_promotion["promotion<br/>Output schema, promotion gate, audit"]:::wip
        output_destinations --> output_promotion
        output_publish["publish<br/>UPSERT, notifications, retention, events"]:::done
        output_promotion --> output_publish
    end

    INPUT --> MIDDLE
    MIDDLE --> OUTPUT